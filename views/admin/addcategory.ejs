<%- include('../layouts/adminheader') %>

<div class="container" style="margin-left: 120px;">
  <div class="card" style="margin-left: 120px;">
    <div class="card-body">
      <h5 class="card-title mb-4">Add Category</h5>
      <form action="/admin/insertCategory" method="POST" enctype="multipart/form-data">

        <% if (messages.success) { %>
          <div class="alert alert-success flash-message" role="alert" style="color: green;" data-timeout="5">
            <%= messages.success %>
          </div>
        <% } %>

        <% if (messages.error) { %>
          <div class="alert alert-danger flash-message" role="alert" style="color: red;" data-timeout="5">
            <%= messages.error %>
          </div>
        <% } %>

        <div class="mb-3">
          <label for="categoryName" class="form-label">Category Name</label>
          <input type="text" class="form-control" id="categoryName" name="name" required>
        </div>
        
        <div class="mb-3">
          <label for="categoryImage" class="form-label">Category Image</label>
          <input type="file" class="form-control" id="categoryImage" name="categoryImage" accept="image/*" required onchange="previewImage()">
          <img id="preview" style="display: none; width: 200px; height: 150px; object-fit: cover;" /> </div>
        <button type="submit" class="btn btn-primary">Add Category</button>
      </form>
    </div>
  </div>
</div>

<%- include('../layouts/adminfooter') %>

<script>


function previewImage() {
    const imageInput = document.getElementById('categoryImage');
    const preview = document.getElementById('preview');

    if (imageInput.files && imageInput.files[0]) {
      const reader = new FileReader();

      reader.onload = function (e) {
        preview.src = e.target.result;
        preview.style.display = 'block';
      };

      reader.readAsDataURL(imageInput.files[0]);
    } else {
      preview.src = "";
      preview.style.display = 'none';
    }
  }


  const flashMessages = document.querySelectorAll('.flash-message[data-timeout]');

  for (const message of flashMessages) {
    const timeout = parseInt(message.dataset.timeout, 10) * 1000;
    setTimeout(() => {
      message.parentNode.removeChild(message);
    }, timeout);
  }
</script>
 